import{c as dt,D as bt,G as gt,e as Tt,d as kt,L as wt,F as At,f as it,b as W,V as Pt,g as It,h as St,i as Mt,j as lt,k as Ct,l as ft,m as rt}from"./three.module.c84a98af.js";import{I as Nt,M as Et,w as jt}from"./vendor.e1ac141b.js";class at extends wt{constructor(E){super(E);this.defaultDPI=90,this.defaultUnit="px"}load(E,G,j,S){const w=this,U=new At(w.manager);U.setPath(w.path),U.setRequestHeader(w.requestHeader),U.setWithCredentials(w.withCredentials),U.load(E,function(_){try{G(w.parse(_))}catch(Z){S?S(Z):console.error(Z),w.manager.itemError(E)}},j,S)}parse(E){const G=this;function j(i,r){if(i.nodeType!==1)return;const t=h(i);let o=!0,c=null;switch(i.nodeName){case"svg":break;case"style":w(i);break;case"g":r=R(i,r);break;case"path":r=R(i,r),i.hasAttribute("d")&&(c=S(i));break;case"rect":r=R(i,r),c=Z(i);break;case"polygon":r=R(i,r),c=Y(i);break;case"polyline":r=R(i,r),c=K(i);break;case"circle":r=R(i,r),c=L(i);break;case"ellipse":r=R(i,r),c=B(i);break;case"line":r=R(i,r),c=tt(i);break;case"defs":o=!1;break;case"use":r=R(i,r);const s=i.href.baseVal.substring(1),a=i.viewportElement.getElementById(s);a?j(a,r):console.warn("SVGLoader: 'use node' references non-existent node id: "+s);break}if(c&&(r.fill!==void 0&&r.fill!=="none"&&c.color.setStyle(r.fill),M(c,Q),z.push(c),c.userData={node:i,style:r}),o){const s=i.childNodes;for(let a=0;a<s.length;a++)j(s[a],r)}t&&(d.pop(),d.length>0?Q.copy(d[d.length-1]):Q.identity())}function S(i){const r=new rt,t=new W,o=new W,c=new W;let s=!0,a=!1;const b=i.getAttribute("d").match(/[a-df-z][^a-df-z]*/ig);for(let T=0,y=b.length;T<y;T++){const O=b[T],u=O.charAt(0),p=O.substr(1).trim();s===!0&&(a=!0,s=!1);let n;switch(u){case"M":n=f(p);for(let e=0,x=n.length;e<x;e+=2)t.x=n[e+0],t.y=n[e+1],o.x=t.x,o.y=t.y,e===0?r.moveTo(t.x,t.y):r.lineTo(t.x,t.y),e===0&&c.copy(t);break;case"H":n=f(p);for(let e=0,x=n.length;e<x;e++)t.x=n[e],o.x=t.x,o.y=t.y,r.lineTo(t.x,t.y),e===0&&a===!0&&c.copy(t);break;case"V":n=f(p);for(let e=0,x=n.length;e<x;e++)t.y=n[e],o.x=t.x,o.y=t.y,r.lineTo(t.x,t.y),e===0&&a===!0&&c.copy(t);break;case"L":n=f(p);for(let e=0,x=n.length;e<x;e+=2)t.x=n[e+0],t.y=n[e+1],o.x=t.x,o.y=t.y,r.lineTo(t.x,t.y),e===0&&a===!0&&c.copy(t);break;case"C":n=f(p);for(let e=0,x=n.length;e<x;e+=6)r.bezierCurveTo(n[e+0],n[e+1],n[e+2],n[e+3],n[e+4],n[e+5]),o.x=n[e+2],o.y=n[e+3],t.x=n[e+4],t.y=n[e+5],e===0&&a===!0&&c.copy(t);break;case"S":n=f(p);for(let e=0,x=n.length;e<x;e+=4)r.bezierCurveTo(X(t.x,o.x),X(t.y,o.y),n[e+0],n[e+1],n[e+2],n[e+3]),o.x=n[e+0],o.y=n[e+1],t.x=n[e+2],t.y=n[e+3],e===0&&a===!0&&c.copy(t);break;case"Q":n=f(p);for(let e=0,x=n.length;e<x;e+=4)r.quadraticCurveTo(n[e+0],n[e+1],n[e+2],n[e+3]),o.x=n[e+0],o.y=n[e+1],t.x=n[e+2],t.y=n[e+3],e===0&&a===!0&&c.copy(t);break;case"T":n=f(p);for(let e=0,x=n.length;e<x;e+=2){const V=X(t.x,o.x),F=X(t.y,o.y);r.quadraticCurveTo(V,F,n[e+0],n[e+1]),o.x=V,o.y=F,t.x=n[e+0],t.y=n[e+1],e===0&&a===!0&&c.copy(t)}break;case"A":n=f(p,[3,4],7);for(let e=0,x=n.length;e<x;e+=7){if(n[e+5]==t.x&&n[e+6]==t.y)continue;const V=t.clone();t.x=n[e+5],t.y=n[e+6],o.x=t.x,o.y=t.y,U(r,n[e],n[e+1],n[e+2],n[e+3],n[e+4],V,t),e===0&&a===!0&&c.copy(t)}break;case"m":n=f(p);for(let e=0,x=n.length;e<x;e+=2)t.x+=n[e+0],t.y+=n[e+1],o.x=t.x,o.y=t.y,e===0?r.moveTo(t.x,t.y):r.lineTo(t.x,t.y),e===0&&c.copy(t);break;case"h":n=f(p);for(let e=0,x=n.length;e<x;e++)t.x+=n[e],o.x=t.x,o.y=t.y,r.lineTo(t.x,t.y),e===0&&a===!0&&c.copy(t);break;case"v":n=f(p);for(let e=0,x=n.length;e<x;e++)t.y+=n[e],o.x=t.x,o.y=t.y,r.lineTo(t.x,t.y),e===0&&a===!0&&c.copy(t);break;case"l":n=f(p);for(let e=0,x=n.length;e<x;e+=2)t.x+=n[e+0],t.y+=n[e+1],o.x=t.x,o.y=t.y,r.lineTo(t.x,t.y),e===0&&a===!0&&c.copy(t);break;case"c":n=f(p);for(let e=0,x=n.length;e<x;e+=6)r.bezierCurveTo(t.x+n[e+0],t.y+n[e+1],t.x+n[e+2],t.y+n[e+3],t.x+n[e+4],t.y+n[e+5]),o.x=t.x+n[e+2],o.y=t.y+n[e+3],t.x+=n[e+4],t.y+=n[e+5],e===0&&a===!0&&c.copy(t);break;case"s":n=f(p);for(let e=0,x=n.length;e<x;e+=4)r.bezierCurveTo(X(t.x,o.x),X(t.y,o.y),t.x+n[e+0],t.y+n[e+1],t.x+n[e+2],t.y+n[e+3]),o.x=t.x+n[e+0],o.y=t.y+n[e+1],t.x+=n[e+2],t.y+=n[e+3],e===0&&a===!0&&c.copy(t);break;case"q":n=f(p);for(let e=0,x=n.length;e<x;e+=4)r.quadraticCurveTo(t.x+n[e+0],t.y+n[e+1],t.x+n[e+2],t.y+n[e+3]),o.x=t.x+n[e+0],o.y=t.y+n[e+1],t.x+=n[e+2],t.y+=n[e+3],e===0&&a===!0&&c.copy(t);break;case"t":n=f(p);for(let e=0,x=n.length;e<x;e+=2){const V=X(t.x,o.x),F=X(t.y,o.y);r.quadraticCurveTo(V,F,t.x+n[e+0],t.y+n[e+1]),o.x=V,o.y=F,t.x=t.x+n[e+0],t.y=t.y+n[e+1],e===0&&a===!0&&c.copy(t)}break;case"a":n=f(p,[3,4],7);for(let e=0,x=n.length;e<x;e+=7){if(n[e+5]==0&&n[e+6]==0)continue;const V=t.clone();t.x+=n[e+5],t.y+=n[e+6],o.x=t.x,o.y=t.y,U(r,n[e],n[e+1],n[e+2],n[e+3],n[e+4],V,t),e===0&&a===!0&&c.copy(t)}break;case"Z":case"z":r.currentPath.autoClose=!0,r.currentPath.curves.length>0&&(t.copy(c),r.currentPath.currentPoint.copy(t),s=!0);break;default:console.warn(O)}a=!1}return r}function w(i){if(!(!i.sheet||!i.sheet.cssRules||!i.sheet.cssRules.length))for(let r=0;r<i.sheet.cssRules.length;r++){const t=i.sheet.cssRules[r];if(t.type!==1)continue;const o=t.selectorText.split(/,/gm).filter(Boolean).map(c=>c.trim());for(let c=0;c<o.length;c++)q[o[c]]=Object.assign(q[o[c]]||{},t.style)}}function U(i,r,t,o,c,s,a,I){if(r==0||t==0){i.lineTo(I.x,I.y);return}o=o*Math.PI/180,r=Math.abs(r),t=Math.abs(t);const b=(a.x-I.x)/2,T=(a.y-I.y)/2,y=Math.cos(o)*b+Math.sin(o)*T,O=-Math.sin(o)*b+Math.cos(o)*T;let u=r*r,p=t*t;const n=y*y,e=O*O,x=n/u+e/p;if(x>1){const yt=Math.sqrt(x);r=yt*r,t=yt*t,u=r*r,p=t*t}const V=u*e+p*n,F=(u*p-V)/V;let et=Math.sqrt(Math.max(0,F));c===s&&(et=-et);const st=et*r*O/t,ct=-et*t*y/r,pt=Math.cos(o)*st-Math.sin(o)*ct+(a.x+I.x)/2,mt=Math.sin(o)*st+Math.cos(o)*ct+(a.y+I.y)/2,ht=_(1,0,(y-st)/r,(O-ct)/t),xt=_((y-st)/r,(O-ct)/t,(-y-st)/r,(-O-ct)/t)%(Math.PI*2);i.currentPath.absellipse(pt,mt,r,t,ht,ht+xt,s===0,o)}function _(i,r,t,o){const c=i*t+r*o,s=Math.sqrt(i*i+r*r)*Math.sqrt(t*t+o*o);let a=Math.acos(Math.max(-1,Math.min(1,c/s)));return i*o-r*t<0&&(a=-a),a}function Z(i){const r=m(i.getAttribute("x")||0),t=m(i.getAttribute("y")||0),o=m(i.getAttribute("rx")||i.getAttribute("ry")||0),c=m(i.getAttribute("ry")||i.getAttribute("rx")||0),s=m(i.getAttribute("width")),a=m(i.getAttribute("height")),I=1-.551915024494,b=new rt;return b.moveTo(r+o,t),b.lineTo(r+s-o,t),(o!==0||c!==0)&&b.bezierCurveTo(r+s-o*I,t,r+s,t+c*I,r+s,t+c),b.lineTo(r+s,t+a-c),(o!==0||c!==0)&&b.bezierCurveTo(r+s,t+a-c*I,r+s-o*I,t+a,r+s-o,t+a),b.lineTo(r+o,t+a),(o!==0||c!==0)&&b.bezierCurveTo(r+o*I,t+a,r,t+a-c*I,r,t+a-c),b.lineTo(r,t+c),(o!==0||c!==0)&&b.bezierCurveTo(r,t+c*I,r+o*I,t,r+o,t),b}function Y(i){function r(s,a,I){const b=m(a),T=m(I);c===0?o.moveTo(b,T):o.lineTo(b,T),c++}const t=/(-?[\d\.?]+)[,|\s](-?[\d\.?]+)/g,o=new rt;let c=0;return i.getAttribute("points").replace(t,r),o.currentPath.autoClose=!0,o}function K(i){function r(s,a,I){const b=m(a),T=m(I);c===0?o.moveTo(b,T):o.lineTo(b,T),c++}const t=/(-?[\d\.?]+)[,|\s](-?[\d\.?]+)/g,o=new rt;let c=0;return i.getAttribute("points").replace(t,r),o.currentPath.autoClose=!1,o}function L(i){const r=m(i.getAttribute("cx")||0),t=m(i.getAttribute("cy")||0),o=m(i.getAttribute("r")||0),c=new lt;c.absarc(r,t,o,0,Math.PI*2);const s=new rt;return s.subPaths.push(c),s}function B(i){const r=m(i.getAttribute("cx")||0),t=m(i.getAttribute("cy")||0),o=m(i.getAttribute("rx")||0),c=m(i.getAttribute("ry")||0),s=new lt;s.absellipse(r,t,o,c,0,Math.PI*2);const a=new rt;return a.subPaths.push(s),a}function tt(i){const r=m(i.getAttribute("x1")||0),t=m(i.getAttribute("y1")||0),o=m(i.getAttribute("x2")||0),c=m(i.getAttribute("y2")||0),s=new rt;return s.moveTo(r,t),s.lineTo(o,c),s.currentPath.autoClose=!1,s}function R(i,r){r=Object.assign({},r);let t={};if(i.hasAttribute("class")){const a=i.getAttribute("class").split(/\s/).filter(Boolean).map(I=>I.trim());for(let I=0;I<a.length;I++)t=Object.assign(t,q["."+a[I]])}i.hasAttribute("id")&&(t=Object.assign(t,q["#"+i.getAttribute("id")]));function o(a,I,b){b===void 0&&(b=function(y){return y.startsWith("url")&&console.warn("SVGLoader: url access in attributes is not implemented."),y}),i.hasAttribute(a)&&(r[I]=b(i.getAttribute(a))),t[a]&&(r[I]=b(t[a])),i.style&&i.style[a]!==""&&(r[I]=b(i.style[a]))}function c(a){return Math.max(0,Math.min(1,m(a)))}function s(a){return Math.max(0,m(a))}return o("fill","fill"),o("fill-opacity","fillOpacity",c),o("fill-rule","fillRule"),o("opacity","opacity",c),o("stroke","stroke"),o("stroke-opacity","strokeOpacity",c),o("stroke-width","strokeWidth",s),o("stroke-linejoin","strokeLineJoin"),o("stroke-linecap","strokeLineCap"),o("stroke-miterlimit","strokeMiterLimit",s),o("visibility","visibility"),r}function X(i,r){return i-(r-i)}function f(i,r,t){if(typeof i!="string")throw new TypeError("Invalid input: "+typeof i);const o={SEPARATOR:/[ \t\r\n\,.\-+]/,WHITESPACE:/[ \t\r\n]/,DIGIT:/[\d]/,SIGN:/[-+]/,POINT:/\./,COMMA:/,/,EXP:/e/i,FLAGS:/[01]/},c=0,s=1,a=2,I=3;let b=c,T=!0,y="",O="";const u=[];function p(V,F,et){const st=new SyntaxError('Unexpected character "'+V+'" at index '+F+".");throw st.partial=et,st}function n(){y!==""&&(O===""?u.push(Number(y)):u.push(Number(y)*Math.pow(10,Number(O)))),y="",O=""}let e;const x=i.length;for(let V=0;V<x;V++){if(e=i[V],Array.isArray(r)&&r.includes(u.length%t)&&o.FLAGS.test(e)){b=s,y=e,n();continue}if(b===c){if(o.WHITESPACE.test(e))continue;if(o.DIGIT.test(e)||o.SIGN.test(e)){b=s,y=e;continue}if(o.POINT.test(e)){b=a,y=e;continue}o.COMMA.test(e)&&(T&&p(e,V,u),T=!0)}if(b===s){if(o.DIGIT.test(e)){y+=e;continue}if(o.POINT.test(e)){y+=e,b=a;continue}if(o.EXP.test(e)){b=I;continue}o.SIGN.test(e)&&y.length===1&&o.SIGN.test(y[0])&&p(e,V,u)}if(b===a){if(o.DIGIT.test(e)){y+=e;continue}if(o.EXP.test(e)){b=I;continue}o.POINT.test(e)&&y[y.length-1]==="."&&p(e,V,u)}if(b===I){if(o.DIGIT.test(e)){O+=e;continue}if(o.SIGN.test(e)){if(O===""){O+=e;continue}O.length===1&&o.SIGN.test(O)&&p(e,V,u)}}o.WHITESPACE.test(e)?(n(),b=c,T=!1):o.COMMA.test(e)?(n(),b=c,T=!0):o.SIGN.test(e)?(n(),b=s,y=e):o.POINT.test(e)?(n(),b=a,y=e):p(e,V,u)}return n(),u}const k=["mm","cm","in","pt","pc","px"],N={mm:{mm:1,cm:.1,in:1/25.4,pt:72/25.4,pc:6/25.4,px:-1},cm:{mm:10,cm:1,in:1/2.54,pt:72/2.54,pc:6/2.54,px:-1},in:{mm:25.4,cm:2.54,in:1,pt:72,pc:6,px:-1},pt:{mm:25.4/72,cm:2.54/72,in:1/72,pt:1,pc:6/72,px:-1},pc:{mm:25.4/6,cm:2.54/6,in:1/6,pt:72/6,pc:1,px:-1},px:{px:1}};function m(i){let r="px";if(typeof i=="string"||i instanceof String)for(let o=0,c=k.length;o<c;o++){const s=k[o];if(i.endsWith(s)){r=s,i=i.substring(0,i.length-s.length);break}}let t;return r==="px"&&G.defaultUnit!=="px"?t=N.in[G.defaultUnit]/G.defaultDPI:(t=N[r][G.defaultUnit],t<0&&(t=N[r].in*G.defaultDPI)),t*parseFloat(i)}function h(i){if(!(i.hasAttribute("transform")||i.nodeName==="use"&&(i.hasAttribute("x")||i.hasAttribute("y"))))return null;const r=g(i);return d.length>0&&r.premultiply(d[d.length-1]),Q.copy(r),d.push(r),r}function g(i){const r=new it,t=J;if(i.nodeName==="use"&&(i.hasAttribute("x")||i.hasAttribute("y"))){const o=m(i.getAttribute("x")),c=m(i.getAttribute("y"));r.translate(o,c)}if(i.hasAttribute("transform")){const o=i.getAttribute("transform").split(")");for(let c=o.length-1;c>=0;c--){const s=o[c].trim();if(s==="")continue;const a=s.indexOf("("),I=s.length;if(a>0&&a<I){const b=s.substr(0,a),T=f(s.substr(a+1,I-a-1));switch(t.identity(),b){case"translate":if(T.length>=1){const y=T[0];let O=y;T.length>=2&&(O=T[1]),t.translate(y,O)}break;case"rotate":if(T.length>=1){let y=0,O=0,u=0;y=-T[0]*Math.PI/180,T.length>=3&&(O=T[1],u=T[2]),H.identity().translate(-O,-u),$.identity().rotate(y),nt.multiplyMatrices($,H),H.identity().translate(O,u),t.multiplyMatrices(H,nt)}break;case"scale":if(T.length>=1){const y=T[0];let O=y;T.length>=2&&(O=T[1]),t.scale(y,O)}break;case"skewX":T.length===1&&t.set(1,Math.tan(T[0]*Math.PI/180),0,0,1,0,0,0,1);break;case"skewY":T.length===1&&t.set(1,0,0,Math.tan(T[0]*Math.PI/180),1,0,0,0,1);break;case"matrix":T.length===6&&t.set(T[0],T[2],T[4],T[1],T[3],T[5],0,0,1);break}}r.premultiply(t)}}return r}function M(i,r){function t(s){l.set(s.x,s.y,1).applyMatrix3(r),s.set(l.x,l.y)}const o=C(r),c=i.subPaths;for(let s=0,a=c.length;s<a;s++){const b=c[s].curves;for(let T=0;T<b.length;T++){const y=b[T];y.isLineCurve?(t(y.v1),t(y.v2)):y.isCubicBezierCurve?(t(y.v0),t(y.v1),t(y.v2),t(y.v3)):y.isQuadraticBezierCurve?(t(y.v0),t(y.v1),t(y.v2)):y.isEllipseCurve&&(o&&console.warn("SVGLoader: Elliptic arc or ellipse rotation or skewing is not implemented."),A.set(y.aX,y.aY),t(A),y.aX=A.x,y.aY=A.y,y.xRadius*=P(r),y.yRadius*=v(r))}}}function C(i){return i.elements[1]!==0||i.elements[3]!==0}function P(i){const r=i.elements;return Math.sqrt(r[0]*r[0]+r[1]*r[1])}function v(i){const r=i.elements;return Math.sqrt(r[3]*r[3]+r[4]*r[4])}const z=[],q={},d=[],J=new it,H=new it,$=new it,nt=new it,A=new W,l=new Pt,Q=new it,D=new DOMParser().parseFromString(E,"image/svg+xml");return j(D.documentElement,{fill:"#000",fillOpacity:1,strokeOpacity:1,strokeWidth:1,strokeLineJoin:"miter",strokeLineCap:"butt",strokeMiterLimit:4}),{paths:z,xml:D.documentElement}}static createShapes(E){const G=999999999,j={ORIGIN:0,DESTINATION:1,BETWEEN:2,LEFT:3,RIGHT:4,BEHIND:5,BEYOND:6},S={loc:j.ORIGIN,t:0};function w(f,k,N,m){const h=f.x,g=k.x,M=N.x,C=m.x,P=f.y,v=k.y,z=N.y,q=m.y,d=(C-M)*(P-z)-(q-z)*(h-M),J=(g-h)*(P-z)-(v-P)*(h-M),H=(q-z)*(g-h)-(C-M)*(v-P),$=d/H,nt=J/H;if(H===0&&d!==0||$<=0||$>=1||nt<0||nt>1)return null;if(d===0&&H===0){for(let A=0;A<2;A++)if(U(A===0?N:m,f,k),S.loc==j.ORIGIN){const l=A===0?N:m;return{x:l.x,y:l.y,t:S.t}}else if(S.loc==j.BETWEEN){const l=+(h+S.t*(g-h)).toPrecision(10),Q=+(P+S.t*(v-P)).toPrecision(10);return{x:l,y:Q,t:S.t}}return null}else{for(let Q=0;Q<2;Q++)if(U(Q===0?N:m,f,k),S.loc==j.ORIGIN){const D=Q===0?N:m;return{x:D.x,y:D.y,t:S.t}}const A=+(h+$*(g-h)).toPrecision(10),l=+(P+$*(v-P)).toPrecision(10);return{x:A,y:l,t:$}}}function U(f,k,N){const m=N.x-k.x,h=N.y-k.y,g=f.x-k.x,M=f.y-k.y,C=m*M-g*h;if(f.x===k.x&&f.y===k.y){S.loc=j.ORIGIN,S.t=0;return}if(f.x===N.x&&f.y===N.y){S.loc=j.DESTINATION,S.t=1;return}if(C<-Number.EPSILON){S.loc=j.LEFT;return}if(C>Number.EPSILON){S.loc=j.RIGHT;return}if(m*g<0||h*M<0){S.loc=j.BEHIND;return}if(Math.sqrt(m*m+h*h)<Math.sqrt(g*g+M*M)){S.loc=j.BEYOND;return}let P;m!==0?P=g/m:P=M/h,S.loc=j.BETWEEN,S.t=P}function _(f,k){const N=[],m=[];for(let h=1;h<f.length;h++){const g=f[h-1],M=f[h];for(let C=1;C<k.length;C++){const P=k[C-1],v=k[C],z=w(g,M,P,v);z!==null&&N.find(q=>q.t<=z.t+Number.EPSILON&&q.t>=z.t-Number.EPSILON)===void 0&&(N.push(z),m.push(new W(z.x,z.y)))}}return m}function Z(f,k,N){const m=new W;k.getCenter(m);const h=[];return N.forEach(g=>{g.boundingBox.containsPoint(m)&&_(f,g.points).forEach(C=>{h.push({identifier:g.identifier,isCW:g.isCW,point:C})})}),h.sort((g,M)=>g.point.x-M.point.x),h}function Y(f,k,N,m,h){(h==null||h==="")&&(h="nonzero");const g=new W;f.boundingBox.getCenter(g);const M=[new W(N,g.y),new W(m,g.y)],C=Z(M,f.boundingBox,k);C.sort((J,H)=>J.point.x-H.point.x);const P=[],v=[];C.forEach(J=>{J.identifier===f.identifier?P.push(J):v.push(J)});const z=P[0].point.x,q=[];let d=0;for(;d<v.length&&v[d].point.x<z;)q.length>0&&q[q.length-1]===v[d].identifier?q.pop():q.push(v[d].identifier),d++;if(q.push(f.identifier),h==="evenodd"){const J=q.length%2==0,H=q[q.length-2];return{identifier:f.identifier,isHole:J,for:H}}else if(h==="nonzero"){let J=!0,H=null,$=null;for(let nt=0;nt<q.length;nt++){const A=q[nt];J?($=k[A].isCW,J=!1,H=A):$!==k[A].isCW&&($=k[A].isCW,J=!0)}return{identifier:f.identifier,isHole:J,for:H}}else console.warn('fill-rule: "'+h+'" is currently not implemented.')}let K=0,L=G,B=-G,tt=E.subPaths.map(f=>{const k=f.getPoints();let N=-G,m=G,h=-G,g=G;for(let M=0;M<k.length;M++){const C=k[M];C.y>N&&(N=C.y),C.y<m&&(m=C.y),C.x>h&&(h=C.x),C.x<g&&(g=C.x)}return B<=h&&(B=h+1),L>=g&&(L=g-1),{curves:f.curves,points:k,isCW:It.isClockWise(k),identifier:K++,boundingBox:new St(new W(g,m),new W(h,N))}});tt=tt.filter(f=>f.points.length>1);const R=tt.map(f=>Y(f,tt,L,B,E.userData.style.fillRule)),X=[];return tt.forEach(f=>{if(!R[f.identifier].isHole){const N=new Mt;N.curves=f.curves,R.filter(h=>h.isHole&&h.for===f.identifier).forEach(h=>{const g=tt[h.identifier],M=new lt;M.curves=g.curves,N.holes.push(M)}),X.push(N)}}),X}static getStrokeStyle(E,G,j,S,w){return E=E!==void 0?E:1,G=G!==void 0?G:"#000",j=j!==void 0?j:"miter",S=S!==void 0?S:"butt",w=w!==void 0?w:4,{strokeColor:G,strokeWidth:E,strokeLineJoin:j,strokeLineCap:S,strokeMiterLimit:w}}static pointsToStroke(E,G,j,S){const w=[],U=[],_=[];if(at.pointsToStrokeWithBuffers(E,G,j,S,w,U,_)===0)return null;const Z=new Ct;return Z.setAttribute("position",new ft(w,3)),Z.setAttribute("normal",new ft(U,3)),Z.setAttribute("uv",new ft(_,2)),Z}static pointsToStrokeWithBuffers(E,G,j,S,w,U,_,Z){const Y=new W,K=new W,L=new W,B=new W,tt=new W,R=new W,X=new W,f=new W,k=new W,N=new W,m=new W,h=new W,g=new W,M=new W,C=new W,P=new W,v=new W;j=j!==void 0?j:12,S=S!==void 0?S:.001,Z=Z!==void 0?Z:0,E=O(E);const z=E.length;if(z<2)return 0;const q=E[0].equals(E[z-1]);let d,J=E[0],H;const $=G.strokeWidth/2,nt=1/(z-1);let A=0,l,Q,D,ot,i=!1,r=0,t=Z*3,o=Z*2;c(E[0],E[1],Y).multiplyScalar($),f.copy(E[0]).sub(Y),k.copy(E[0]).add(Y),N.copy(f),m.copy(k);for(let u=1;u<z;u++){d=E[u],u===z-1?q?H=E[1]:H=void 0:H=E[u+1];const p=Y;if(c(J,d,p),L.copy(p).multiplyScalar($),h.copy(d).sub(L),g.copy(d).add(L),l=A+nt,Q=!1,H!==void 0){c(d,H,K),L.copy(K).multiplyScalar($),M.copy(d).sub(L),C.copy(d).add(L),D=!0,L.subVectors(H,J),p.dot(L)<0&&(D=!1),u===1&&(i=D),L.subVectors(H,d),L.normalize();const n=Math.abs(p.dot(L));if(n!==0){const e=$/n;L.multiplyScalar(-e),B.subVectors(d,J),tt.copy(B).setLength(e).add(L),P.copy(tt).negate();const x=tt.length(),V=B.length();B.divideScalar(V),R.subVectors(H,d);const F=R.length();switch(R.divideScalar(F),B.dot(P)<V&&R.dot(P)<F&&(Q=!0),v.copy(tt).add(d),P.add(d),ot=!1,Q?D?(C.copy(P),g.copy(P)):(M.copy(P),h.copy(P)):I(),G.strokeLineJoin){case"bevel":b(D,Q,l);break;case"round":T(D,Q),D?a(d,h,M,l,0):a(d,C,g,l,1);break;case"miter":case"miter-clip":default:const et=$*G.strokeMiterLimit/x;if(et<1)if(G.strokeLineJoin!=="miter-clip"){b(D,Q,l);break}else T(D,Q),D?(R.subVectors(v,h).multiplyScalar(et).add(h),X.subVectors(v,M).multiplyScalar(et).add(M),s(h,l,0),s(R,l,0),s(d,l,.5),s(d,l,.5),s(R,l,0),s(X,l,0),s(d,l,.5),s(X,l,0),s(M,l,0)):(R.subVectors(v,g).multiplyScalar(et).add(g),X.subVectors(v,C).multiplyScalar(et).add(C),s(g,l,1),s(R,l,1),s(d,l,.5),s(d,l,.5),s(R,l,1),s(X,l,1),s(d,l,.5),s(X,l,1),s(C,l,1));else Q?(D?(s(k,A,1),s(f,A,0),s(v,l,0),s(k,A,1),s(v,l,0),s(P,l,1)):(s(k,A,1),s(f,A,0),s(v,l,1),s(f,A,0),s(P,l,0),s(v,l,1)),D?M.copy(v):C.copy(v)):D?(s(h,l,0),s(v,l,0),s(d,l,.5),s(d,l,.5),s(v,l,0),s(M,l,0)):(s(g,l,1),s(v,l,1),s(d,l,.5),s(d,l,.5),s(v,l,1),s(C,l,1)),ot=!0;break}}else I()}else I();!q&&u===z-1&&y(E[0],N,m,D,!0,A),A=l,J=d,f.copy(M),k.copy(C)}if(!q)y(d,h,g,D,!1,l);else if(Q&&w){let u=v,p=P;i!==D&&(u=P,p=v),D?(ot||i)&&(p.toArray(w,0*3),p.toArray(w,3*3),ot&&u.toArray(w,1*3)):(ot||!i)&&(p.toArray(w,1*3),p.toArray(w,3*3),ot&&u.toArray(w,0*3))}return r;function c(u,p,n){return n.subVectors(p,u),n.set(-n.y,n.x).normalize()}function s(u,p,n){w&&(w[t]=u.x,w[t+1]=u.y,w[t+2]=0,U&&(U[t]=0,U[t+1]=0,U[t+2]=1),t+=3,_&&(_[o]=p,_[o+1]=n,o+=2)),r+=3}function a(u,p,n,e,x){Y.copy(p).sub(u).normalize(),K.copy(n).sub(u).normalize();let V=Math.PI;const F=Y.dot(K);Math.abs(F)<1&&(V=Math.abs(Math.acos(F))),V/=j,L.copy(p);for(let et=0,st=j-1;et<st;et++)B.copy(L).rotateAround(u,V),s(L,e,x),s(B,e,x),s(u,e,.5),L.copy(B);s(B,e,x),s(n,e,x),s(u,e,.5)}function I(){s(k,A,1),s(f,A,0),s(h,l,0),s(k,A,1),s(h,l,1),s(g,l,0)}function b(u,p,n){p?u?(s(k,A,1),s(f,A,0),s(h,l,0),s(k,A,1),s(h,l,0),s(P,l,1),s(h,n,0),s(M,n,0),s(P,n,.5)):(s(k,A,1),s(f,A,0),s(g,l,1),s(f,A,0),s(P,l,0),s(g,l,1),s(g,n,1),s(C,n,0),s(P,n,.5)):u?(s(h,n,0),s(M,n,0),s(d,n,.5)):(s(g,n,1),s(C,n,0),s(d,n,.5))}function T(u,p){p&&(u?(s(k,A,1),s(f,A,0),s(h,l,0),s(k,A,1),s(h,l,0),s(P,l,1),s(h,A,0),s(d,l,.5),s(P,l,1),s(d,l,.5),s(M,A,0),s(P,l,1)):(s(k,A,1),s(f,A,0),s(g,l,1),s(f,A,0),s(P,l,0),s(g,l,1),s(g,A,1),s(P,l,0),s(d,l,.5),s(d,l,.5),s(P,l,0),s(C,A,1)))}function y(u,p,n,e,x,V){switch(G.strokeLineCap){case"round":x?a(u,n,p,V,.5):a(u,p,n,V,.5);break;case"square":if(x)Y.subVectors(p,u),K.set(Y.y,-Y.x),L.addVectors(Y,K).add(u),B.subVectors(K,Y).add(u),e?(L.toArray(w,1*3),B.toArray(w,0*3),B.toArray(w,3*3)):(L.toArray(w,1*3),L.toArray(w,3*3),B.toArray(w,0*3));else{Y.subVectors(n,u),K.set(Y.y,-Y.x),L.addVectors(Y,K).add(u),B.subVectors(K,Y).add(u);const F=w.length;e?(L.toArray(w,F-1*3),B.toArray(w,F-2*3),B.toArray(w,F-4*3)):(L.toArray(w,F-2*3),B.toArray(w,F-1*3),B.toArray(w,F-4*3))}break}}function O(u){let p=!1;for(let e=1,x=u.length-1;e<x;e++)if(u[e].distanceTo(u[e+1])<S){p=!0;break}if(!p)return u;const n=[];n.push(u[0]);for(let e=1,x=u.length-1;e<x;e++)u[e].distanceTo(u[e+1])>=S&&n.push(u[e]);return n.push(u[u.length-1]),n}}}const vt=Nt({props:{path:null,material:{default:()=>new dt({color:"black",side:bt})}},setup(ut,{expose:E}){const{scene:G,update:j}=Et("context");function S(U){const _=`<path d="${U}"></path>`,K=new at().parse(_).paths,L=new gt;for(let B=0;B<K.length;B++){const tt=K[B],R=at.createShapes(tt);for(let X=0;X<R.length;X++){const f=R[X],k=new Tt(f),N=new kt(k,ut.material);L.add(N)}}return L}const w=S(ut.path);return jt(()=>G,()=>{G&&(G.add(w),j())},{immediate:!0}),E({mesh:w,update:j}),(U,_)=>null}});export{vt as default};
